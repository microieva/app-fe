@import '~@angular/material/theming';


$my-primary: mat-palette($mat-indigo);
$my-accent: mat-palette($mat-pink, A200, A100, A400);
$my-warn: mat-palette($mat-red);

@include mat-core();

$my-theme: mat-light-theme((
  color: (
    primary: $my-primary,
    accent: $my-accent,
    warn: $my-warn
  )
));
@include angular-material-theme($my-theme);

/*
Creating a custom theme in Angular Material involves a few steps where you define your own color palettes and apply them to your application. Here's a general guide on how to create and apply a custom theme:

1. **Set Up Your Environment**: Make sure your project is set up with Angular Material⁶.

2. **Create a Custom Theme File**: Navigate to your project’s `src` directory and create a new Sass file for your theme, for example, `custom-theme.scss`.

3. **Import Angular Material Theming**: At the beginning of your `custom-theme.scss`, import the Angular Material theming styles:
   ```scss
   @import '~@angular/material/theming';
   ```

4. **Define Your Palettes**: Use the `mat-palette` mixin to create your custom color palettes for primary, accent, and warn hues.
   ```scss
   $my-primary: mat-palette($mat-indigo);
   $my-accent: mat-palette($mat-pink, A200, A100, A400);
   $my-warn: mat-palette($mat-red);
   ```

5. **Create the Theme Object**: Combine your palettes into a theme object using `mat-light-theme` or `mat-dark-theme`.
   ```scss
   $my-theme: mat-light-theme((
     color: (
       primary: $my-primary,
       accent: $my-accent,
       warn: $my-warn
     )
   ));
   ```

6. **Include Base Styles**: Include the base styles for core styling and Angular Material components.
   ```scss
   @include mat-core();
   ```

7. **Apply the Theme**: Apply your custom theme to all Angular Material components.
   ```scss
   @include angular-material-theme($my-theme);
   ```

8. **Add to Styles**: Include your `custom-theme.scss` in your global styles file.

9. **Update `angular.json`**: Replace the pre-built theme with your custom theme file in the `angular.json` file.

10. **Restart Your Application**: Restart your development server to see the changes take effect.

For a more detailed guide, including how to define custom typography and other advanced theming techniques, you can refer to the Angular Material documentation⁷ or watch tutorials that walk you through the process¹²³.

Remember, custom theming allows you to tailor the look and feel of your app to match your branding and design requirements. It's a powerful way to create a unique user experience with Angular Material.

Source: Conversation with Copilot, 12/06/2024
(1) Customizable Theming with Angular Material | by Dviniukov - Medium. https://medium.com/@dviniukov/customizable-theming-with-angular-material-37d37bddbf24.
(2) Angular Material. https://v6.material.angular.io/guide/theming-your-components.
(3) Angular Material Custom Theme Tutorial. https://www.youtube.com/watch?v=EBnTZwr0RSs.
(4) How to customize Angular material theme | Angular 17?. https://www.youtube.com/watch?v=M7q2Ty-y2zQ.
(5) How to change the Angular material theme in just 5 minutes. https://www.youtube.com/watch?v=NugqJxFYmDM.
(6) How to Create Custom Theme in Angular Material 16. https://www.positronx.io/create-angular-material-custom-theme/.
(7) Angular Material Theming System: Complete Guide - DEV Community. https://angular-material.dev/articles/angular-material-theming-system-complete-guide.
(8) Material Theme Generator. https://materialtheme.arcsine.dev/.
(9) undefined. https://material.angular.io?theme=indigo-pink.
(10) undefined. https://material.angular.io?theme=deeppurple-amber.
(11) undefined. https://material.angular.io?theme=pink-bluegrey.
(12) undefined. https://material.angular.io?theme=purple-green.*/